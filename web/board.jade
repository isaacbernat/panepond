doctype html
link(rel="import" href="packages/polymer/polymer.html")

polymer-element(name="panepond-board")
  template
    input.update(type='button', value="toggle config" on-click="{{toggleConfig}}")
    label score: {{totalScore}}

    .config(style='display:{{config.display}}')
      div
        p Use the toggle button to hide and show configuration options.
        span
          label tile size
          input(type='number', value="{{config.tileSize}}")
        span
          label rand seed
          input(type='number', value="{{config.randomSeed}}")
          input.update(type='button', value="generate" on-click="{{generateRandomSeed}}")
          input.update(type='button', value="update" on-click="{{updateRandomSeed}}")
        h4 Click button and press key to change controls
        input.update(type='button', value="up" on-click="{{updateKeyUp}}")
        input.update(type='button', value="down" on-click="{{updateKeyDown}}")
        input.update(type='button', value="right" on-click="{{updateKeyRight}}")
        input.update(type='button', value="left" on-click="{{updateKeyLeft}}")
        input.update(type='button', value="action" on-click="{{updateKeyAction}}")
        p Type {{config.controls["0"]}} {{config.controls["1"]}} {{config.controls["2"]}} {{config.controls["3"]}} to move around. Press {{config.controls["4"]}} for action
      div
        p For a more comprehensive configuration use the JSON export/import tool below and modify the values at your own pleasure.

        textarea(rows='15', cols="50" value="{{config.jsonDump}}")
        input.update(type='button', value="export" on-click="{{exportConfig}}")
        input.update(type='button', value="import" on-click="{{importConfig}}")

    .board.ti(style='font-size:{{config.tileSize}}px')
      template(repeat="{{col in columns | enumerate}}")
        .col
          template(repeat="{{tile in col.value | enumerate}}")
            .tile(pos="{{col.index}},{{tile.index}}" \
              style="background: linear-gradient(135deg, \
                hsla( \
                  {{config.tiles['hsla'][tile.value.type]}}, \
                  {{(tile.value.type == '0')?'0%':config.tiles['hsla']['saturation']}}%, \
                  {{(tile.value.type == '0')?config.tiles['hsla']['lightness'] -10:config.tiles['hsla']['lightness'] +10}}%, \
                  {{config.tiles['hsla']['alpha']}}) 0%, \
                hsla( \
                  {{config.tiles['hsla'][tile.value.type]}}, \
                  {{(tile.value.type == '0')?'0%':config.tiles['hsla']['saturation']}}%, \
                  {{(tile.value.type == '0')?config.tiles['hsla']['lightness'] -10:config.tiles['hsla']['lightness']}}%, \
                  {{config.tiles['hsla']['alpha']}}) 50%, \
                hsla( \
                  {{config.tiles['hsla'][tile.value.type]}}, \
                  {{(tile.value.type == '0')?'0%':config.tiles['hsla']['saturation']}}%, \
                  {{(tile.value.type == '0')?config.tiles['hsla']['lightness'] -10:config.tiles['hsla']['lightness'] -10}}%, \
                  {{config.tiles['hsla']['alpha']}}) 51%, \
                hsla( \
                  {{config.tiles['hsla'][tile.value.type]}}, \
                  {{(tile.value.type == '0')?'0%':config.tiles['hsla']['saturation']}}%, \
                  {{(tile.value.type == '0')?config.tiles['hsla']['lightness'] -10:config.tiles['hsla']['lightness'] -2}}%, \
                  {{config.tiles['hsla']['alpha']}}) 100%)") {{config.tiles["symbols"][tile.value.type]}}

    .board.cu(style='margin-left:{{leftMarginOffset}}em; font-size:{{config.tileSize}}px')
      template(repeat="{{col in columns | enumerate}}")
        .col
            template(repeat="{{tile in col.value | enumerate}}")
              .tile(style="{{(col.index >= cursor['x'] && col.index < cursor['x'] + cursor['width']\
                          && tile.index >= cursor['y'] && tile.index < cursor['y'] + cursor['height'])? + config.tiles['cursor'] : ''}}") &nbsp;

    .board.ef(style='margin-left:{{leftMarginOffset}}em; font-size:{{config.tileSize}}px')
      template(repeat="{{col in columnEffects | enumerate}}")
        .col
          template(repeat="{{tile in col.value | enumerate}}")
            .tile(pos="{{col.index}},{{tile.index}}") {{tile.value}}

    link(rel="stylesheet" href="board.css")
script(type="application/dart" src="board.dart")
